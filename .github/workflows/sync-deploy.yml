# .github/workflows/ci.yml
name: Version from branches → Build → Deploy

on:
  push:
    branches: [ test, 'test-*' ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ci-pages
  cancel-in-progress: true

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    env:
      PRODUCTS: "fast2 arender flowerdocs"

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Fetch all branches
        run: git fetch origin "+refs/heads/*:refs/remotes/origin/*"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Generate Docusaurus versions from test-<product>-v* branches
        shell: bash
        run: |
          set -euo pipefail

          # Nettoyage des versions éphémères (on regénère à chaque run)
          rm -rf versioned_docs versioned_sidebars

          for product in $PRODUCTS; do
            echo "=== ${product} ==="

            # Sauvegarde du "current" (branche test)
            rm -rf ".cache_${product}_current" && mkdir -p ".cache_${product}_current"
            rsync -a "docs/${product}/" ".cache_${product}_current/"

            # Liste des branches versionnées pour ce produit (test-product-vX)
            mapfile -t branches < <(git for-each-ref --format='%(refname:short)' refs/remotes/origin \
              | grep "^origin/test-${product}-v" | sed 's#^origin/##' | sort -V)

            for br in "${branches[@]}"; do
              ver="${br##test-${product}-}"   # ex: v1, v2

              echo "-> snapshot ${product} ${ver} from ${br}"

              # extrait docs/<product> depuis la branche versionnée
              rm -rf .tmp_docs && mkdir -p .tmp_docs
              if git cat-file -e "origin/${br}:docs/${product}/" 2>/dev/null; then
                git archive --format=tar "origin/${br}" "docs/${product}" \
                  | tar -x -C .tmp_docs --strip-components=1
              else
                echo "   (skip ${br}: docs/${product} not found)"; continue
              fi

              # remplace le current par le contenu de la branche
              rsync -a --delete .tmp_docs/ "docs/${product}/"

              # crée le snapshot de version pour le plugin correspondant
              npx docusaurus docs:version --plugin "${product}" "${ver}"
            done

            # Restaure le current d'origine
            rsync -a --delete ".cache_${product}_current/" "docs/${product}/"
          done

      - name: Build
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: npm run build

      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build
          force_orphan: true
