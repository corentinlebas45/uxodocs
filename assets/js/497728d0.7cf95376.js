"use strict";(globalThis.webpackChunkuxodocs=globalThis.webpackChunkuxodocs||[]).push([[158],{6806:(a,e,t)=>{t.d(e,{A:()=>n});const n=t.p+"assets/images/dataset-802f354538088b49553a750d72b91cdc.png"},7847:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"cookbooks/dataset_basics","title":"Datasets","description":"Dataset structure","source":"@site/docs/fast2/cookbooks/dataset_basics.md","sourceDirName":"cookbooks","slug":"/cookbooks/dataset_basics","permalink":"/uxodocs/docs/fast2/cookbooks/dataset_basics","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"boilerplate","permalink":"/uxodocs/docs/fast2/tags/boilerplate"},{"inline":true,"label":"dataset","permalink":"/uxodocs/docs/fast2/tags/dataset"},{"inline":true,"label":"java","permalink":"/uxodocs/docs/fast2/tags/java"},{"inline":true,"label":"data","permalink":"/uxodocs/docs/fast2/tags/data"}],"version":"current","frontMatter":{"title":"Datasets","tags":["boilerplate","dataset","java","data"]},"sidebar":"docs","previous":{"title":"Add data from file name","permalink":"/uxodocs/docs/fast2/cookbooks/data_from_filename"},"next":{"title":"Learn how to deal with documents","permalink":"/uxodocs/docs/fast2/cookbooks/document_basics"}}');var s=t(4848),d=t(8453);const l={title:"Datasets",tags:["boilerplate","dataset","java","data"]},i="Learn how to deal with datasets",r={},o=[{value:"Data object",id:"data-object",level:2},{value:"Name",id:"name",level:3},{value:"Type",id:"type",level:3},{value:"Value(s)",id:"values",level:3},{value:"Properties",id:"properties",level:3},{value:"Add data",id:"add-data",level:2},{value:"Iterating through all data",id:"iterating-through-all-data",level:2},{value:"Retrieve data value(s)",id:"retrieve-data-values",level:2},{value:"Single-valued data",id:"single-valued-data",level:3},{value:"Multi-valued data",id:"multi-valued-data",level:3},{value:"Remove data",id:"remove-data",level:2},{value:"Check if data exists",id:"check-if-data-exists",level:2},{value:"DataNotFound exception",id:"datanotfound-exception",level:2}];function c(a){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"learn-how-to-deal-with-datasets",children:"Learn how to deal with datasets"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"Dataset structure",src:t(6806).A+"",width:"1692",height:"1125"})}),"\n",(0,s.jsx)(e.p,{children:"Datasets are Fast2 objects which can be involved at different levels within the punnet."}),"\n",(0,s.jsx)(e.p,{children:"They can be found on the"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"punnets"}),"\n",(0,s.jsx)(e.li,{children:"documents"}),"\n",(0,s.jsx)(e.li,{children:"workflows"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Datasets gather data which can be manipulated to store properties, and can be accessed as follows:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"DataSet dataset = punnet.getDataSet();\n\nDataSet dataset = document.getDataSet();\n\nDataSet dataset = workflow.getDataSet();\n"})}),"\n",(0,s.jsx)(e.p,{children:"Since datasets are just groups of data, understanding basic operations with data is primordial."}),"\n",(0,s.jsx)(e.h2,{id:"data-object",children:"Data object"}),"\n",(0,s.jsx)(e.p,{children:"In Fast2, a data has 3 different informations:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"its name,"}),"\n",(0,s.jsxs)(e.li,{children:["its type (",(0,s.jsx)(e.code,{children:"String"})," or ",(0,s.jsx)(e.code,{children:"int"}),")"]}),"\n",(0,s.jsx)(e.li,{children:"its value(s)"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"The following line retrieve the data as object :"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"Data data = dataset.getData(dataName);\n"})}),"\n",(0,s.jsx)(e.h3,{id:"name",children:"Name"}),"\n",(0,s.jsx)(e.p,{children:"Getting the name of a data just goes like:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"String dataName = data.getSymbolicName();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"type",children:"Type"}),"\n",(0,s.jsxs)(e.p,{children:["If no type has been defined when the data has been created, the data type will be ",(0,s.jsx)(e.code,{children:"null"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["However Fast2 will treat the value of the data as a regular ",(0,s.jsx)(e.code,{children:"String"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"String dataType = data.getType();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"values",children:"Value(s)"}),"\n",(0,s.jsx)(e.p,{children:"When dealing with data, some can be single-valued while others can be multi-valued."}),"\n",(0,s.jsx)(e.p,{children:"The returned object will differ accordingly."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"String dataValue = data.getValue();\n\nList<String> dataValues = data.getValues();\n"})}),"\n",(0,s.jsx)(e.p,{children:"Data values can be added along the way, even when the data has already been created with a given value to begin with:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"data.addValue(value);\n"})}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(e.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(e.p,{children:"A data can be dealt with just like any other object with properties."}),"\n",(0,s.jsx)(e.p,{children:"Therefore, adding a property, removing it or getting it are just as simple as you would think:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"data.setProperty(name, value);\n\nString value = data.getProperty(name);\n\ndata.removeProperty(name);\n"})}),"\n",(0,s.jsx)(e.h2,{id:"add-data",children:"Add data"}),"\n",(0,s.jsx)(e.p,{children:"Several ways of adding data to the dataset are available, depending on the type of value you are willing to store:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:'Data myData = myDataset.addData(name, "String", value);  // String\nData myData = myDataset.addData(name, null, value);\n\nData myData = myDataset.addData(name, "boolean", true);  // boolean\n\nData myData = myDataset.addData(name, type, 10);         // long, int\n\nData myData = myDataset.addData(name, "String");             // list or arrays of String\nmyData.getValues().addAll(Arrays.asList("a", "b", "c"));\n\ndocument.getDataSet().addData("multivalued", "String").getValues().addAll(Arrays.asList("value #1", "value #2"));\n'})}),"\n",(0,s.jsx)(e.p,{children:"Adding a new data with the same name as an already stored one, will result in overwriting the existing value with the new one."}),"\n",(0,s.jsx)(e.h2,{id:"iterating-through-all-data",children:"Iterating through all data"}),"\n",(0,s.jsx)(e.p,{children:"Data mapping often requires to cover all data, no matter their name. To do so, the easiest way is to get them as a list:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"List<Data> allData = myDataset.getData();\n\nfor(Data data : allData){\n    // ...\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"retrieve-data-values",children:"Retrieve data value(s)"}),"\n",(0,s.jsx)(e.p,{children:"The following line retrieve the data as object :"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"Data data = dataset.getData(dataName);\n"})}),"\n",(0,s.jsx)(e.h3,{id:"single-valued-data",children:"Single-valued data"}),"\n",(0,s.jsx)(e.p,{children:"The dataset offers a shortcut to get the value(s) of any data:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"// 1st way : via data object\nString value = myDataSet.getData(dataName).getValue();\n\n// or\n\n// 2nd way : dataset shortcut\nString value = myDataSet.getDataValue(dataName);\n"})}),"\n",(0,s.jsx)(e.h3,{id:"multi-valued-data",children:"Multi-valued data"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"// 1st way : via data object\nList<String> value = myDataSet.getData(dataName).getValues();\n\n// or\n\n// 2nd way : dataset shortcut\nList<String> value = myDataSet.getDataValues(dataName);\n"})}),"\n",(0,s.jsx)(e.h2,{id:"remove-data",children:"Remove data"}),"\n",(0,s.jsxs)(e.p,{children:["If the data has been found and could successfully be removed, the following method will return ",(0,s.jsx)(e.code,{children:"TRUE"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"boolean removedSuccessfully = myDataset.removeData(name);\n"})}),"\n",(0,s.jsx)(e.h2,{id:"check-if-data-exists",children:"Check if data exists"}),"\n",(0,s.jsxs)(e.p,{children:["Rely on this method to make sure not to overwrite any existing data, nor having a ",(0,s.jsx)(e.code,{children:"DataNotFoundException"})," exception."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"boolean exists = myDataset.hasData(name);\n"})}),"\n",(0,s.jsx)(e.h2,{id:"datanotfound-exception",children:"DataNotFound exception"}),"\n",(0,s.jsxs)(e.p,{children:["When operations are performed on non-existing data, an exception of type ",(0,s.jsx)(e.code,{children:"DataNotFoundException"})," is thrown."]}),"\n",(0,s.jsx)(e.hr,{})]})}function h(a={}){const{wrapper:e}={...(0,d.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(c,{...a})}):c(a)}},8453:(a,e,t)=>{t.d(e,{R:()=>l,x:()=>i});var n=t(6540);const s={},d=n.createContext(s);function l(a){const e=n.useContext(d);return n.useMemo(function(){return"function"==typeof a?a(e):{...e,...a}},[e,a])}function i(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(s):a.components||s:l(a.components),n.createElement(d.Provider,{value:e},a.children)}}}]);