"use strict";(globalThis.webpackChunkuxodocs=globalThis.webpackChunkuxodocs||[]).push([[9981],{5905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"catalog/tool","title":"tool","description":"AlfrescoRestDeleteNode  - Alfresco delete nodes using Alfresco REST protocol  {#AlfrescoRestDeleteNode data-toc-label=\\"AlfrescoRestDeleteNode\\"}","source":"@site/docs/fast2/catalog/tool.md","sourceDirName":"catalog","slug":"/catalog/tool","permalink":"/uxodocs/docs/fast2/catalog/tool","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"source","permalink":"/uxodocs/docs/fast2/catalog/source"},"next":{"title":"transformer","permalink":"/uxodocs/docs/fast2/catalog/transformer"}}');var d=n(4848),i=n(8453);const l={},r=void 0,c={},o=[{value:"AlfrescoRestDeleteNode <small>- Alfresco delete nodes using Alfresco REST protocol</small>",id:'AlfrescoRestDeleteNode data-toc-label="AlfrescoRestDeleteNode"',level:2},{value:"AwsMove <small>- AWS S3 file mover</small>",id:'AwsMove data-toc-label="AwsMove"',level:2},{value:"CheckCompoundDocumentSettings <small>- Check if an Office document contains embedded files</small>",id:'CheckCompoundDocumentSettings data-toc-label="CheckCompoundDocumentSettings"',level:2},{value:"CountPdfPages <small>- Count the number of pages in PDF file</small>",id:'CountPdfPages data-toc-label="CountPdfPages"',level:2},{value:"DeduplicatePunnets <small>- De-duplicate tasks based on some pattern</small>",id:'DeduplicatePunnets data-toc-label="DeduplicatePunnets"',level:2},{value:"EndTaskWriter <small>- Create file with custom content when map ends</small>",id:'EndTaskWriter data-toc-label="EndTaskWriter"',level:2},{value:"ExceptionGenerator <small>- Regularly generate exceptions</small>",id:'ExceptionGenerator data-toc-label="ExceptionGenerator"',level:2},{value:"GenerateExceptionTask <small>- Throw exception when condition is verified</small>",id:'GenerateExceptionTask data-toc-label="GenerateExceptionTask"',level:2},{value:"HashSignTask <small>- Compute content hash</small>",id:'HashSignTask data-toc-label="HashSignTask"',level:2},{value:"MailMover <small>- Move email conversation into folder</small>",id:'MailMover data-toc-label="MailMover"',level:2},{value:"MimeTypeFinder <small>- Find mime-type of documents</small>",id:'MimeTypeFinder data-toc-label="MimeTypeFinder"',level:2},{value:"MimetypeToExtension <small>- Append extension to name</small>",id:'MimetypeToExtension data-toc-label="MimetypeToExtension"',level:2},{value:"MoveAnnotationContent <small>- Move the content of any annotation</small>",id:'MoveAnnotationContent data-toc-label="MoveAnnotationContent"',level:2},{value:"MoveContent <small>- Move or copy the content of a document</small>",id:'MoveContent data-toc-label="MoveContent"',level:2},{value:"MovePunnet <small>- Move a punnet from folder to folder</small>",id:'MovePunnet data-toc-label="MovePunnet"',level:2},{value:"Noop <small>- Blank task performing no operation</small>",id:'Noop data-toc-label="Noop"',level:2},{value:"NuxeoQuery <small>- Query nuxeo from NXQL</small>",id:'NuxeoQuery data-toc-label="NuxeoQuery"',level:2},{value:"PropertyHelper <small>- FileNet submodule for properties management</small>",id:'PropertyHelper data-toc-label="PropertyHelper"',level:2},{value:"PunnetSerializer <small>- From-java-to-XML punnet converter</small>",id:'PunnetSerializer data-toc-label="PunnetSerializer"',level:2},{value:"PunnetWriteId <small>- List all punnet IDs into a file</small>",id:'PunnetWriteId data-toc-label="PunnetWriteId"',level:2},{value:"ReadContent <small>- Resolve mime type from content</small>",id:'ReadContent data-toc-label="ReadContent"',level:2},{value:"SQLMultiQueryTask <small>- Perform SQL statements between database tables and documents in Fast2</small>",id:'SQLMultiQueryTask data-toc-label="SQLMultiQueryTask"',level:2},{value:"SingleCallTask <small>- Call a task only once per campaign</small>",id:'SingleCallTask data-toc-label="SingleCallTask"',level:2},{value:"SleepTask <small>- Blocks punnet on thread for a given period of time</small>",id:'SleepTask data-toc-label="SleepTask"',level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(t.h2,{id:'AlfrescoRestDeleteNode data-toc-label="AlfrescoRestDeleteNode"',children:["AlfrescoRestDeleteNode ",(0,d.jsx)("small",{children:" - Alfresco delete nodes using Alfresco REST protocol "})]}),"\n",(0,d.jsx)(t.p,{children:"This task relies on the Alfresco public REST API (with v1.0.4 of the Alfresco REST client) to delete nodes."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Alfresco connection provider"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"/uxodocs/docs/fast2/catalog/credentials#AlfrescoRESTConnectionProvider",children:"AlfrescoRESTConnectionProvider"})}),(0,d.jsx)(t.td,{})]})})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Permanent deletion of the node"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If true then the node is deleted permanently, without moving to the trashcan. Only the owner of the node or an admin can permanently delete the node."}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"The pattern to get the node Id from the document"}),(0,d.jsx)(t.td,{children:"Pattern"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'AwsMove data-toc-label="AwsMove"',children:["AwsMove ",(0,d.jsx)("small",{children:" - AWS S3 file mover "})]}),"\n",(0,d.jsx)(t.p,{children:"Reorganize your files inside your AWS S3 environment."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"AWS access credentials"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"/uxodocs/docs/fast2/catalog/credentials#AWSConnectionProvider",children:"AWSConnectionProvider"})}),(0,d.jsx)(t.td,{children:"Must have granted AmazonS3FullAccess permission"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Target key"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The destination path inside your bucket where the document must be placed. Use as standard Pattern (includes S3 Folders)"})]})]})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Target bucket"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The target bucket where you want to move your S3 files. If empty use the same as origin"})]})})]}),"\n",(0,d.jsxs)(t.h2,{id:'CheckCompoundDocumentSettings data-toc-label="CheckCompoundDocumentSettings"',children:["CheckCompoundDocumentSettings ",(0,d.jsx)("small",{children:" - Check if an Office document contains embedded files "})]}),"\n",(0,d.jsx)(t.p,{children:"Only Office documents are supported (docx, xlsx, pptx). All other contents will be skipped."}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Data name for found items"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The name of the new data under which the list of found items will be stored"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"EMBEDDED_FILES "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Extract as side content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'CountPdfPages data-toc-label="CountPdfPages"',children:["CountPdfPages ",(0,d.jsx)("small",{children:" - Count the number of pages in PDF file "})]}),"\n",(0,d.jsx)(t.p,{children:"This task will add the number of pages as a metadata to the document."}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Throw conversion exceptions"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If Fast2 performs document conversion, it can either fail silently or pop an error when the action has not been properly completed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Mime-type : Check document before content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"You can assume the file extension is accurate, or ask Fast2 to check the content encoding to identify more precisely the document mime-type. By default, Fast2 will check at content level"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process annotation contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If annotations are asked to be migrated, you can filter here to process their content(s) or only their metadata"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Scan recursive content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Only convert terminal contents and not container ones"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process all contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Fast2 will either only focus on the first encountered content, or process them all"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Supported mime-types"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String list"})}),(0,d.jsx)(t.td,{children:"Specify the list of all mime-types of documents which Fast2 will convert"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Property name"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Name of the property to which the number of pages will be linked"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"F_PAGES "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'DeduplicatePunnets data-toc-label="DeduplicatePunnets"',children:["DeduplicatePunnets ",(0,d.jsx)("small",{children:" - De-duplicate tasks based on some pattern "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is used to get rid of duplicate punnets"}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Save values to this file"}),(0,d.jsx)(t.td,{children:"Pattern"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"The pattern to use to get the unique value"}),(0,d.jsx)(t.td,{children:"Pattern"}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Iterate over punnets (default: false) or over documents (true)"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"The pattern to use to explain which element this is duplicate with"}),(0,d.jsx)(t.td,{children:"Pattern"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Size of per-file hash table"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"Each file has a table attached to access the existing elements faster (the larger the table, the faster the search). Each individual file will store n elements (size of file / size of each elements), the recommended value for hash table should not be less than 10% of the number elements per file, which means each hash table entry references ~10 elemens. Example : storing 50 bytes of identifications (from the Identification pattern), each element will be ~100 bytes (including key, ..), so a 64MBytes file will store ~671088 elements per file. The hash table being 64k, each hash table entry references ~10 elements"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"65536 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Size of each individual file, in MBytes"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"Multiple files will be created on-demand to store all elements as required."}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"64 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"In which property we put the identification of the first element we are duplicate with"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'EndTaskWriter data-toc-label="EndTaskWriter"',children:["EndTaskWriter ",(0,d.jsx)("small",{children:" - Create file with custom content when map ends "})]}),"\n",(0,d.jsx)(t.p,{children:"A task to write a file when all punnets of task are finished."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Output file path"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Absolute path to file. This path must include file name and extension. This field will be resolved by Fast2 before the task is run"})]})})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"File encoding"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Encoding of the file where the content will be written"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"UTF-8 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"File content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Text to write in the output file"}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'ExceptionGenerator data-toc-label="ExceptionGenerator"',children:["ExceptionGenerator ",(0,d.jsx)("small",{children:" - Regularly generate exceptions "})]}),"\n",(0,d.jsx)(t.p,{children:"This task will generates different exception types : either TaskException or RuntimeException. It will be usefull for your when dealing with exception routing.By default, Fast2 will produce 3 task exceptions, then 4 runtime exceptions, and finally 4 no-exception punnets. To force exceptions, set the no-exceptions ratio to zero."}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Runtime exceptions ratio"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"The number of runtime exception which will be thrown by Fast2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"3 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"No-exception ratio"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"The number of no-exception which will be thrown by Fast2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"4 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Task exceptions ratio"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"The number of task exception which will be thrown by Fast2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"3 "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'GenerateExceptionTask data-toc-label="GenerateExceptionTask"',children:["GenerateExceptionTask ",(0,d.jsx)("small",{children:" - Throw exception when condition is verified "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is responsible for exception generation based on a condition which can be dynamically built for each punnet."}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Condition"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsxs)(t.td,{children:["Set here the condition to trigger exception. This field will be resolved by Fast2 before the task is executed ",(0,d.jsx)("br",{})," ",(0,d.jsx)("p",{children:" Ex/  mimeType == application/pdf"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]})})]}),"\n",(0,d.jsxs)(t.h2,{id:'HashSignTask data-toc-label="HashSignTask"',children:["HashSignTask ",(0,d.jsx)("small",{children:" - Compute content hash "})]}),"\n",(0,d.jsx)(t.p,{children:"This task computes the hash of a given document content. This new hash can be confronted to an already existing one."}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Suffix of ouptut file"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Suffix of the external file containing the hash value to compare with"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Conten key for hash"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Name of the metadata where the hash value will be stored. This value will be attached to the content and the document dataset itself"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"hash "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Algorithm"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The algorithm of hashing which will be used for document content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"SHA-256 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process annotation contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If annotations are asked to be migrated, you can filter here to process their content(s) or only their metadata"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Scan recursive content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Only convert terminal contents and not container ones"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Supported mime-types"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String list"})}),(0,d.jsx)(t.td,{children:"Specify the list of all mime-types of documents which Fast2 will convert"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Block size"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"In bytes. The default value is 256 * 1024"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"262144 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Throw conversion exceptions"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If Fast2 performs document conversion, it can either fail silently or pop an error when the action has not been properly completed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Mime-type : Check document before content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"You can assume the file extension is accurate, or ask Fast2 to check the content encoding to identify more precisely the document mime-type. By default, Fast2 will check at content level"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Existing hash to compare"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Document data name to compare the new hash with. Throws TaskException when different"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process all contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Fast2 will either only focus on the first encountered content, or process them all"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Document key for hash"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Name of the metadata where the hash value will be stored, at document level"}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'MailMover data-toc-label="MailMover"',children:["MailMover ",(0,d.jsx)("small",{children:" - Move email conversation into folder "})]}),"\n",(0,d.jsx)(t.p,{children:"This task will be useful when your needs will be to move a given email conversation into a dedicated folder. Whether this folder exists or not, Fast2 will be able to retrieve or create it."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Email provider"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"/uxodocs/docs/fast2/catalog/credentials#MailBoxProvider",children:"MailBoxProvider"})}),(0,d.jsx)(t.td,{children:"The Fast2 module establishing the connection to the email server, from the account of a given user. For more about the configuration of the object, please refer to the appropriate section"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Destination folder"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The folder where the email will eventually be moved to. This value will be resolved by Fast2 prior to the task execution"})]})]})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mailNotFoundException"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Maximum connection TTL"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Long"})}),(0,d.jsx)(t.td,{children:"Fill the value in milliseconds"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"60 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Data to find"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The data to look for. This value will be resolved by Fast2 prior to the task execution"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${Message-Id} "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Create destination folder"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Ask Fast2 to create the destination folder to move the email into, in case this specific folder does not exist yet"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Search field name"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The name of the field where to find the data. Only 'Subject' and 'Message-Id' are available"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Message-Id "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'MimeTypeFinder data-toc-label="MimeTypeFinder"',children:["MimeTypeFinder ",(0,d.jsx)("small",{children:" - Find mime-type of documents "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is used for automatic detection of mime type for documents"}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process annotation contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If annotations are asked to be migrated, you can filter here to process their content(s) or only their metadata"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Scan recursive content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Only convert terminal contents and not container ones"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Stop at first exception"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Stop processing punnets when one could not been properly processed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Supported mime-types"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String list"})}),(0,d.jsx)(t.td,{children:"Specify the list of all mime-types of documents which Fast2 will convert"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Use most specific mime type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Otherwise use the first mime type found"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Throw conversion exceptions"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If Fast2 performs document conversion, it can either fail silently or pop an error when the action has not been properly completed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Default mime type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The default mime-type to set if none has been found. This value must be set, or it will throw a RuntimeException"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"application/octet-stream "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Mime-type : Check document before content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"You can assume the file extension is accurate, or ask Fast2 to check the content encoding to identify more precisely the document mime-type. By default, Fast2 will check at content level"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Update document mime type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Otherwise update only page or content mimetype"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Force to identify mime type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If the mime type could not be found by looking at the metadata, either Fast2 skips the document or digs deeper into the content to retrieve the mime type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process all contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Fast2 will either only focus on the first encountered content, or process them all"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'MimetypeToExtension data-toc-label="MimetypeToExtension"',children:["MimetypeToExtension ",(0,d.jsx)("small",{children:" - Append extension to name "})]}),"\n",(0,d.jsx)(t.p,{children:"Based on the mime-type of the content, this task will resolve the correct extension to append to the name of the document. Only supported for one content per document"}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Document mime-type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsxs)(t.td,{children:["This value will be resolved by Fast2, ",(0,d.jsx)(t.code,{children:"${...}"})," syntax is supported. Use this option when only the document mime-type has been provided, without the actual content."]}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Key of name property"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Key of the current name metadata, whose value will be appended by the matching extension."}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"name "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'MoveAnnotationContent data-toc-label="MoveAnnotationContent"',children:["MoveAnnotationContent ",(0,d.jsx)("small",{children:" - Move the content of any annotation "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is responsible for moving content of annotations from a given folder into a new one."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Source folder"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Absolute path of the folder where to find the annotations to move"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Destination folder"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Absolute path of the folder where to move the annotations"})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'MoveContent data-toc-label="MoveContent"',children:["MoveContent ",(0,d.jsx)("small",{children:" - Move or copy the content of a document "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is responsible for moving content of documents from a given folder into a new one."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Destination folder"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The path of the folder where the contents will be moved into"})]})})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Copy files"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Copy the file to the destination folder instead of moving it"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Delete original copy"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Delete the file in the source folder when it has been migrated"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process annotation contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If annotations are asked to be migrated, you can filter here to process their content(s) or only their metadata"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Checking interval"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"Time to wait between two checks if target file exists"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"1000 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Scan recursive content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Only convert terminal contents and not container ones"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Exclude file name for renaming file"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Renamed the file based on the value of the destination folder only"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Wait until target file exists"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Only process next document when the current has successfully been migrated"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Supported mime-types"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String list"})}),(0,d.jsx)(t.td,{children:"Specify the list of all mime-types of documents which Fast2 will convert"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Allowed retries"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"Number of checks before despair and exception"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"60 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Source folder"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Set here the common prefix of all document contents to move. If null use file folder"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Throw conversion exceptions"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If Fast2 performs document conversion, it can either fail silently or pop an error when the action has not been properly completed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Mime-type : Check document before content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"You can assume the file extension is accurate, or ask Fast2 to check the content encoding to identify more precisely the document mime-type. By default, Fast2 will check at content level"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"File extension"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The extension to append to the name of the files once they'll be moved"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Keep original filename"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Set the destination file name to the 'title' property defined at the content level. Otherwise, keep the name of the file pointed by the URL"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Process all contents"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Fast2 will either only focus on the first encountered content, or process them all"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Files to exclude"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String list"})}),(0,d.jsxs)(t.td,{children:["The path of the folder to exclude. Its whole content will remain in place. Leave empty to move all folders children ",(0,d.jsx)("br",{})," ",(0,d.jsx)("p",{children:" Ex/  *.out, folder/**/exclude"})]}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'MovePunnet data-toc-label="MovePunnet"',children:["MovePunnet ",(0,d.jsx)("small",{children:" - Move a punnet from folder to folder "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is responsible for moving a punnet from an embedded path into a new folder."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Destination path"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The path where to move the punnets. This field will be resolved by Fast2 prior to the task execution"})]})})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Time between two retries"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"In milliseconds"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"1000 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Allowed retries"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"Maximum number of retries before throwing an exception when renaming failed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"10 "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Override existing punnet"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If Fast2 finds an already existing punnet, it will override it with the one being processed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Look for path at punnet level"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Tells Fast2 to look for the absolute path variable (whose key is 'absolutePath') into the punnet dataset. Otherwise Fast2 will look at the first document dataset level"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'Noop data-toc-label="Noop"',children:["Noop ",(0,d.jsx)("small",{children:" - Blank task performing no operation "})]}),"\n",(0,d.jsx)(t.p,{children:"This task does not perform anything, hence you don't have to configure it. All documents and punnets will go through it without having their state updated."}),"\n",(0,d.jsxs)(t.h2,{id:'NuxeoQuery data-toc-label="NuxeoQuery"',children:["NuxeoQuery ",(0,d.jsx)("small",{children:" - Query nuxeo from NXQL "})]}),"\n",(0,d.jsx)(t.p,{children:"This task only works with JDK-11. If any record matches the input query, the UUID of the Nuxeo items will be added to the F2 document as a new dataset."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Nuxeo connection details"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"NuxeoConnectionProvider"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Nuxeo query"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsxs)(t.td,{children:["NXQL query, with double-quotes around values (Ex: SELECT * FROM Document WHERE dc",":title"," = ",(0,d.jsx)(t.code,{children:'\\"${nom}\\"'})," AND ecm",":isTrashed"," = 0)"]})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'PropertyHelper data-toc-label="PropertyHelper"',children:["PropertyHelper ",(0,d.jsx)("small",{children:" - FileNet submodule for properties management "})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Blacklist for extraction"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String list"})}),(0,d.jsxs)(t.td,{children:["Default blacklist is: ",(0,d.jsx)(t.code,{children:"ActiveMarkings"}),", ",(0,d.jsx)(t.code,{children:"AuditedEvents"}),", ",(0,d.jsx)(t.code,{children:"Annotations"}),", ",(0,d.jsx)(t.code,{children:"ChildDocuments"}),", ",(0,d.jsx)(t.code,{children:"ChildRelationships"}),", ",(0,d.jsx)(t.code,{children:"CmHoldRelationships"}),", ",(0,d.jsx)(t.code,{children:"CmThumbnails"}),", ",(0,d.jsx)(t.code,{children:"Containers"}),", ",(0,d.jsx)(t.code,{children:"CoordinatedTasks"}),", ",(0,d.jsx)(t.code,{children:"CurrentVersion"}),", ",(0,d.jsx)(t.code,{children:"DependentDocuments"}),", ",(0,d.jsx)(t.code,{children:"DestinationDocuments"}),", ",(0,d.jsx)(t.code,{children:"ExternalReplicaIdentities"}),", ",(0,d.jsx)(t.code,{children:"ParentDocuments"}),", ",(0,d.jsx)(t.code,{children:"ParentRelationships"}),", ",(0,d.jsx)(t.code,{children:"Permissions"}),", ",(0,d.jsx)(t.code,{children:"ReleasedVersion"}),", ",(0,d.jsx)(t.code,{children:"StorageArea"}),", ",(0,d.jsx)(t.code,{children:"StoragePolicy"}),", ",(0,d.jsx)(t.code,{children:"This"}),", ",(0,d.jsx)(t.code,{children:"Versions"}),", ",(0,d.jsx)(t.code,{children:"WorkflowSubscriptions"})]}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Force user names"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Force assigning users (e.g. Creator, LastModifier) when they don't exist in the destination environment"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Date format"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"MM dd HH:mm:ss z yyyy "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Property name used to explicitly skip Data"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Do not throw Date parsing exceptions"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Store object-store as name"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"By default, Fast2 is expecting FileNet UUID as object-store reference on object-typed properties. Enable this option to deal with the object-store name instead of its UUID. This parameter is only use at extraction."}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'PunnetSerializer data-toc-label="PunnetSerializer"',children:["PunnetSerializer ",(0,d.jsx)("small",{children:" - From-java-to-XML punnet converter "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is responsible for serializing a punnet to an XML file. That can be interesting to check punnet metadata or freeze a punnet at a certain state."}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Serialize punnets as JSON"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"If enabled, punnet will be serialized as Json file. Otherwise, it will be a XML file."}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]})})]}),"\n",(0,d.jsxs)(t.h2,{id:'PunnetWriteId data-toc-label="PunnetWriteId"',children:["PunnetWriteId ",(0,d.jsx)("small",{children:" - List all punnet IDs into a file "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is responsible for writing all punnet IDs into a given text file. Whether the punnet has documents or not, you can keep a trace of all created and encountered punnets."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Output file"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"The absolute path of the output file where to store all punnet IDs. Specify file name and extension"})]})})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"OutputStream"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Append"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Create FileOutputStream with this append option"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Always write punnet ID"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Write punnet Id event when it contains no document"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'ReadContent data-toc-label="ReadContent"',children:["ReadContent ",(0,d.jsx)("small",{children:" - Resolve mime type from content "})]}),"\n",(0,d.jsx)(t.p,{children:"This task is responsible to find the mime type of a document accross either its metadata or its content."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Mime type retriever"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"/uxodocs/docs/fast2/catalog/tool#MimeTypeFinder",children:"MimeTypeFinder"})}),(0,d.jsx)(t.td,{children:"Module to find content mime type"})]})})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Dry run"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Process all punnets without editing their state or metadata"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Maximum number of page read per content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"Only for multi-page content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer.MAX_VALUE "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Force to identify mime type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Ask Fast2 to dig deeper into the content to find a mime type. The metadata will be added to the content"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'SQLMultiQueryTask data-toc-label="SQLMultiQueryTask"',children:["SQLMultiQueryTask ",(0,d.jsx)("small",{children:" - Perform SQL statements between database tables and documents in Fast2 "})]}),"\n",(0,d.jsx)(t.p,{children:"Perform SQL INSERT or UPDATE statements to documents in database, or SELECT from data existing in the database to attach them onto the document dataset."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Query caller"}),(0,d.jsx)(t.td,{children:"SQLQueryColumnCaller"}),(0,d.jsx)(t.td,{children:"This modules is responsible of establishing the connection between Fast2 and the designated database"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Source attributes"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String/Pattern map"})}),(0,d.jsx)(t.td,{children:"Key: Desired column for where clause; Value: Source Document data to use for query"})]})]})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Use PreparedStatements"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Use PreparedStatements instead of plain SQL statements"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Target attributes"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String/Pattern map"})}),(0,d.jsx)(t.td,{children:"<key, value> set where 'key' refers to the SQL name of the data, and 'value' refers the name of the data in the Fast2 dataset."}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Reset target data"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Clean content when target already exists"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"SQL column types"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String/String map"})}),(0,d.jsx)(t.td,{children:"<key, value> where 'key' is the SQL data name, and 'value' is its type. Supported types are : String, float, int, Date."}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"SQL query"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"Select precisely data you want to extract through a classic SQL query. All retieved values will be attached to the document dataset based on the data listed in the 'Target attributes' configuration section."}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'SingleCallTask data-toc-label="SingleCallTask"',children:["SingleCallTask ",(0,d.jsx)("small",{children:" - Call a task only once per campaign "})]}),"\n",(0,d.jsx)(t.p,{children:"This task will be useful to perform a given subtask only once in a map execution. You choose to call this subtask at the very begining of the campaign, or at its very end."}),"\n",(0,d.jsx)("b",{children:"Mandatory settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Subtask"}),(0,d.jsx)(t.td,{children:"Task"}),(0,d.jsx)(t.td,{children:"The task to call only once in the campaign execution"})]})})]}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Call at end"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Execute the subtask when the first punnet is processed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Call at begining"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Execute the subtask when the first punnet is processed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false "})})]})]})]}),"\n",(0,d.jsxs)(t.h2,{id:'SleepTask data-toc-label="SleepTask"',children:["SleepTask ",(0,d.jsx)("small",{children:" - Blocks punnet on thread for a given period of time "})]}),"\n",(0,d.jsx)(t.p,{children:"Task blocking a thread per punnet to wait some time before processing the punnet, without updating its state or metadata."}),"\n",(0,d.jsx)(t.admonition,{type:"warning",children:(0,d.jsx)(t.p,{children:"As the thread is asleep for a defined time, all tasks are slowed down."})}),"\n",(0,d.jsx)("b",{children:"Optional settings"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default value"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Sleep time"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"In milliseconds"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"500 "})})]})})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var s=n(6540);const d={},i=s.createContext(d);function l(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);