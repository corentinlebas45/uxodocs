"use strict";(globalThis.webpackChunkuxodocs=globalThis.webpackChunkuxodocs||[]).push([[3134],{633:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/content-bee11834786657cf25c5865e06888f79.png"},5861:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"cookbooks/content_basics","title":"Contents in Fast2","description":"Content structure","source":"@site/docs/fast2/cookbooks/content_basics.md","sourceDirName":"cookbooks","slug":"/cookbooks/content_basics","permalink":"/uxodocs/docs/fast2/cookbooks/content_basics","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"boilerplate","permalink":"/uxodocs/docs/fast2/tags/boilerplate"},{"inline":true,"label":"content","permalink":"/uxodocs/docs/fast2/tags/content"},{"inline":true,"label":"java","permalink":"/uxodocs/docs/fast2/tags/java"}],"version":"current","frontMatter":{"title":"Contents in Fast2","tags":["boilerplate","content","java"]},"sidebar":"docs","previous":{"title":"Retrieve content and metadata from an S3 bucket","permalink":"/uxodocs/docs/fast2/cookbooks/content-metadata-from-s3"},"next":{"title":"CSV source : a step further","permalink":"/uxodocs/docs/fast2/cookbooks/csvsource_further"}}');var a=n(4848),s=n(8453);const r={title:"Contents in Fast2",tags:["boilerplate","content","java"]},c="Learn how to deal with contents",i={},l=[{value:"How to create a content",id:"how-to-create-a-content",level:2},{value:"How to access a content",id:"how-to-access-a-content",level:2},{value:"Mime-type",id:"mime-type",level:2},{value:"Properties",id:"properties",level:2},{value:"Sub-contents",id:"sub-contents",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"learn-how-to-deal-with-contents",children:"Learn how to deal with contents"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Content structure",src:n(633).A+"",width:"1692",height:"1125"})}),"\n",(0,a.jsx)(t.p,{children:'In Fast2, contents are objects embedding the "file" (= binary format) of the document. They can be found within either documents themselves or annotations, and can be accessed through different ways. Contents usually hold a mime-type property, alongside any other property closely related to the content itself.'}),"\n",(0,a.jsxs)(t.p,{children:["Contents are often referred as ",(0,a.jsx)(t.strong,{children:"ContentContainers"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"how-to-create-a-content",children:"How to create a content"}),"\n",(0,a.jsx)(t.p,{children:"This section relates of how to add a content from the code."}),"\n",(0,a.jsxs)(t.p,{children:["If you wish to add a content (or delete it), head out to the ",(0,a.jsx)(t.a,{href:"/uxodocs/docs/fast2/catalog/transformer#AlterDocumentContent",children:"AlterDocumentContent"})," task."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"\n// From an URL or a path\nContentContainer myContent = task.getManager()\n                    .getPunnetContentFactory()\n                    .createContent(myDocument, myUrl);\n\n\n// From an inputstream\nContentContainer myContent = task.getManager()\n                    .getPunnetContentFactory()\n                    .createContent(myPunnet, myDocument, myInputStream);\n\n\n// From a byte array\nContentContainer myContent = task.getManager()\n                    .getPunnetContentFactory()\n                    .createContent(myPunnet, myDocument, myByteArray);\n\n"})}),"\n",(0,a.jsx)(t.h2,{id:"how-to-access-a-content",children:"How to access a content"}),"\n",(0,a.jsx)(t.p,{children:"When digging into the structure of a punnet from the Explore place, you'll come across an URL pointing to the location of the binary file."}),"\n",(0,a.jsx)(t.p,{children:"However there is quite a few ways of accessing a given content:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"\n// As java file\nFile myFile = task.getManager()\n                    .getPunnetContentFactory()\n                    .getContentAsFile(myContent);\n\n\n\n// As byte array\nbyte[] myBytes = task.getManager()\n                    .getPunnetContentFactory()\n                    .getContentAsByteArray(myContent);\n\n\n\n// As URL\nURL myURL = task.getManager()\n                    .getPunnetContentFactory()\n                    .getContentAsUrl(myContent);\n\n\n\n// As RandomAccessInterface\nRandomAccessInterface myRAI = task.getManager()\n                    .getPunnetContentFactory()\n                    .getContentAsRandomAccessInterface(myContent);\n\n"})}),"\n",(0,a.jsx)(t.h2,{id:"mime-type",children:"Mime-type"}),"\n",(0,a.jsxs)(t.p,{children:["The content mime-type is a property usually added by the ",(0,a.jsx)(t.a,{href:"/uxodocs/docs/fast2/catalog/tool#MimeTypeFinder",children:"MimeTypeFinder"})," task. However you could be willing to force it, which can be done like so:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'myContent.setMimeType("the right mime-type");\n'})}),"\n",(0,a.jsxs)(t.p,{children:["This is basically what the ",(0,a.jsx)(t.a,{href:"/uxodocs/docs/fast2/catalog/tool#MimeTypeFinder",children:"MimeTypeFinder"})," will do once the mime-type resolved from the content format."]}),"\n",(0,a.jsx)(t.p,{children:"To access this value, a regular java getter will do:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"String myMimetype = myContent.getMimeType();\n"})}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.p,{children:"The contents in Fast2 also embed properties, for more closely related data."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"\nCollection<Property> myProps = myContent.getProperties();\n\nString myValue = myContent.getProperty(myName);\n\nmyContent.setProperty(myName,myValue);\n\n"})}),"\n",(0,a.jsx)(t.h2,{id:"sub-contents",children:"Sub-contents"}),"\n",(0,a.jsxs)(t.p,{children:["Subcontents are just regular contents stored into a ",(0,a.jsx)(t.strong,{children:"ContentSet"})," attached to a content."]}),"\n",(0,a.jsx)(t.p,{children:"They can be both created/added and removed:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"ContentSet subContents = myContent.getSubContents();\n\nmyContent.clearSubContents();\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(6540);const a={},s=o.createContext(a);function r(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);